@model PaymentServiceExample.Models.Payment.TakePaymentModel

@functions {
	private IEnumerable<SelectListItem> GetYear(SelectListItem initialItem = null)
	{
		const int numberOfYearsAhead = 7;

		int currentYear = DateTime.Now.Year;

		var years = new List<SelectListItem>();

		if (initialItem != null)
		{
			years.Add(initialItem);
		}

		for (int i = 0; i < numberOfYearsAhead; i++)
		{
			years.Add(new SelectListItem {Text = Convert.ToString(currentYear++)});
		}

		return years;
	}
}

@{
	ViewBag.Title = "Form Example model title";
	Layout = "~/Views/Shared/_Layout.cshtml";
}

<h2>Enter payment details</h2>

<div class="row">
	<div class="col-md-4">
		<section class="take-payment">
			@using (Html.BeginForm("TakePayment", "Payment", FormMethod.Post, new { role = "form" }))
			{
				@Html.AntiForgeryToken()

				if (ViewBag.Success == true)
				{
					<p class="alert alert-success"><span class="glyphicon glyphicon-ok" aria-hidden="true"></span>&nbsp;Payment submitted!</p>
				}

				@Html.ValidationSummary(true, "", new { @class = "text-danger" })

				<div class="form-group">
					@Html.LabelFor(m => m.Name)
					@Html.TextBoxFor(m => m.Name, new { @class = "form-control" })
					@Html.ValidationMessageFor(m => m.Name, "", new { @class = "text-danger" })
				</div>
				<div class="form-group">
					@Html.LabelFor(m => m.CardNumber)
					@Html.TextBoxFor(m => m.CardNumber, new { type = "number", @class = "form-control" })
					@Html.ValidationMessageFor(m => m.CardNumber, "", new {@class = "text-danger"})
				</div>
				<div class="form-group expiry">
					@Html.LabelFor(m => m.Month, "Expiry")
					@Html.LabelFor(m => m.Month, new {@class = "sr-only"})
					@Html.DropDownListFor(m => m.Month, new[]
					{
						new SelectListItem {Text = "Select Month", Value="0", Selected = true},
						new SelectListItem {Text = "01 - January", Value = "1"},
						new SelectListItem {Text = "02 - February", Value = "2"},
						new SelectListItem {Text = "03 - March", Value = "3"},
						new SelectListItem {Text = "04 - April", Value = "4"},
						new SelectListItem {Text = "05 - May", Value = "5"},
						new SelectListItem {Text = "06 - June", Value = "6"},
						new SelectListItem {Text = "07 - July", Value = "7"},
						new SelectListItem {Text = "08 - August", Value = "8"},
						new SelectListItem {Text = "09 - September", Value = "9"},
						new SelectListItem {Text = "10 - October", Value = "10"},
						new SelectListItem {Text = "11 - November", Value = "11"},
						new SelectListItem {Text = "12 - December", Value = "12"},
					}, new {@class = "form-control"})
					@Html.LabelFor(m => m.Year, new {@class = "sr-only"})
					@Html.DropDownListFor(m => m.Year, new List<SelectListItem>(GetYear(new SelectListItem {Selected = true, Text = "Select Year", Value = "" })), new {@class = "form-control"})
					@Html.ValidationMessageFor(m => m.Month, "", new { @class = "text-danger expiry-msg" })
					@Html.ValidationMessageFor(m => m.Year, "", new { @class = "text-danger expiry-msg", data_val_number = "Please select a year" })
				</div>
				<div class="form-group">
					@Html.LabelFor(m => m.CVV)
					@Html.TextBoxFor(m => m.CVV, new { type="number", @class = "form-control cvv", min="0", max="999" })
					@Html.ValidationMessageFor(m => m.CVV, "", new {@class = "text-danger"})
				</div>
				<div>
					@Html.ActionLink("Cancel", "TakePayment", null, new {@class="btn btn-link", role="button"})
					<input type="submit" value="Take Payment" class="btn btn-primary"/>
				</div>
			}
		</section>
	</div>
</div>

@section Scripts {
	@Scripts.Render("~/bundles/jqueryval")
}